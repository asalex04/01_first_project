{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/MyPost.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","snapshot","this","onChange","autoFocus","onBlur","onDoubleClick","React","Component","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","alt","data","Preloader","Post","item","ava","message","count","maxLength10","maxLengthCreator","MyPosts","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","posts","map","el","text","likesCount","_","uniqueId","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","memo","MyPostsContainer","connect","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.45cf58dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__2ziNI\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status\n  }\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true\n    });\n  }\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false\n    });\n    this.props.updateStatus(this.state.status)\n  }\n\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value\n    })\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.editMode ?\n          <div>\n            <span onDoubleClick={this.activateEditMode}>{this.props.status || 'status'}</span>\n          </div>\n          :\n          <div>\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from './ProfileStatus';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader/>\n  }\n  return (\n    <>\n      <div className={classes.descriptionBlock}>\n        <img src={profile.photos.large} alt='img'/>\n        <ProfileStatus status={status.data} updateStatus={updateStatus}/>\n      </div>\n    </>\n  )\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './MyPost.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img src={props.ava} alt=''/>\n      {props.message}\n      <div>\n        <span>like {props.count}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport _ from 'lodash';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post' ;\nimport {Field, reduxForm} from \"redux-form\";\nimport {required, maxLengthCreator} from '../../../utils/validators/validator'\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst ava = 'https://friendtok.com/upload/photos/2021/03/BlRShw5IG5475RTXDDug_13_a14f8774a0d7d770faff995ddbbac266_avatar_full.jpg'\nconst MyPosts = (props) => {\n    const addNewPost = (values) => {\n      props.addPost(values.newPostBody)\n    }\n\n    return (\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostFormRedux onSubmit={addNewPost}/>\n            <div className={classes.posts}>\n                {props.posts.map(el => <Post message={el.text} count={el.likesCount} ava={ava} key={_.uniqueId()}/>)}\n            </div>\n        </div>\n    )\n}\nconst AddPostForm = (props) => {\n  return <div>\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name={'newPostBody'} placeholder={'PostMessage'}\n               validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  </div>\n}\nconst AddPostFormRedux = reduxForm({form: 'addNewPostForm'})(AddPostForm)\nexport default React.memo(MyPosts);\n","import {addPostActionCreator} from \"../../../redux/profile_reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostBody) => {\n      dispatch(addPostActionCreator(newPostBody))\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer.jsx\";\n\nconst Profile = (props) => {\n     return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile_reducer\";\nimport {withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n      <Profile {...this.props}\n               profile={this.props.profile}\n               status={this.props.status}\n               updateStatus={this.props.updateStatus}/>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  })\n}\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n  withRouter\n)(ProfileContainer)\n"],"sourceRoot":""}