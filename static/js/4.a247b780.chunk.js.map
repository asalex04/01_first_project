{"version":3,"sources":["components/Dialogs/Diaglos.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","item","to","src","ava","alt","name","Message","classMessage","message","type","answer","text","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","messages","dialogs","isAuth","dialogsItems","map","el","key","_","uniqueId","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,2B,oBCAnND,EAAOC,QAAU,CAAC,KAAO,2B,+ICeVC,EAZI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,qBAAKC,UAAS,UAAKC,IAAQC,MAA3B,SACI,eAAC,IAAD,CAASC,GAAIL,EAAb,UACI,qBAAKM,IAAKP,EAAMQ,IAAKC,IAAI,KACpBT,EAAMU,WCGZC,EAVC,SAACX,GACb,IAAMY,EAAsC,WAAvBZ,EAAMa,QAAQC,KAAd,UACZV,IAAQS,QADI,YACOT,IAAQW,QADf,UAEZX,IAAQS,SAEjB,OACI,qBAAKV,UAAWS,EAAhB,SAA+BZ,EAAMa,QAAQG,Q,iCCJ/CC,EAAeC,YAAiB,KAgBvBC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACnB,GACtB,OACE,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXf,KAAM,iBACNgB,YAAY,qBACZC,SAAU,CAACC,IAAUX,OAG9B,8BAAK,sDCYIY,EArBC,SAAC7B,GACf,MAA4BA,EAAM8B,YAA3BC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,QAMjB,OAAKhC,EAAMiC,OAGT,sBAAK9B,UAAWC,IAAQ4B,QAAxB,UACE,qBAAK7B,UAAWC,IAAQ8B,aAAxB,SACGF,EAAQG,KAAI,SAAAC,GAAE,OAAI,wBAAC,EAAD,2BAAgBA,GAAhB,IAAoBC,IAAKC,IAAEC,mBAEhD,qBAAKpC,UAAWC,IAAQ2B,SAAxB,SACGA,EAASI,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAASvB,QAASuB,GAASE,IAAEC,iBAEnD,cAAC,EAAD,CAAqBlB,SAdH,SAACmB,GACrBxC,EAAMyC,YAAYD,EAAOE,sBAGD,cAAC,IAAD,CAAUpC,GAAG,Y,wDCXnCqC,EAA6B,SAACC,GAAD,MAAY,CAC7CX,OAAQW,EAAMC,KAAKZ,SCcNa,sBACbC,aAdsB,SAACH,GACvB,MAAO,CACLd,YAAac,EAAMd,gBAGI,SAACkB,GAC1B,MAAO,CACLP,YAAa,SAACC,GACZM,EAASC,YAAmBP,UDNF,SAACQ,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKpD,MAAMiC,OACT,cAACiB,EAAD,eAAeE,KAAKpD,QADI,cAAC,IAAD,CAAUM,GAAG,eAHH,GACb+C,IAAMH,WAQtC,OADqCH,YAAQJ,EAARI,CAAoCI,KCG5DL,CAGbjB","file":"static/js/4.a247b780.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diaglos_dialogs__34zMe\",\"dialogsItems\":\"Diaglos_dialogsItems__3fx1H\",\"active\":\"Diaglos_active__2jsQx\",\"messages\":\"Diaglos_messages__59zht\",\"answer\":\"Diaglos_answer__3gJKa\",\"message\":\"Diaglos_message__2gACu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__qDyfs\"};","import React from 'react';\nimport classes from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = `/dialogs/${props.id}`;\n    return (\n        <div className={`${classes.item}`}>\n            <NavLink to={path} >\n                <img src={props.ava} alt=''/>\n                    {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport classes from '../Diaglos.module.css'\n\nconst Message = (props) => {\n    const classMessage = props.message.type === 'answer'\n        ? `${classes.message} ${classes.answer}`\n        : `${classes.message}`\n\n    return (\n        <div className={classMessage}>{props.message.text}</div>\n    )\n}\n\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\nimport React from \"react\";\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea}\n               name={'newMessageBody'}\n               placeholder='Enter your message'\n               validate={[required, maxLength100]}\n        />\n      </div>\n      <div><button>Add post</button></div>\n    </form>\n  )\n}\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport _ from 'lodash';\nimport classes from './Diaglos.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageFormRedux from './Message/AddMessageForm'\n\nconst Dialogs = (props) => {\n  const {messages, dialogs} = props.dialogsPage;\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody)\n  }\n\n  if (!props.isAuth) return <Redirect to='/login' />\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>\n        {dialogs.map(el => <DialogItem {...el} key={_.uniqueId()} />)}\n      </div>\n      <div className={classes.messages}>\n        {messages.map(el => <Message message={el} key={_.uniqueId()}/>)}\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n  )\n}\nexport default Dialogs;\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='/login' />\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n  return ConnectedAuthRedirectComponent\n}\n","import Dialogs from \"./Dialogs\";\nimport {sendMessageCreator} from \"../../redux/dialogs_reducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody))\n    },\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}